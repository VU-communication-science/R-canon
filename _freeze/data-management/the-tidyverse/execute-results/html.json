{
  "hash": "5b46448437fd8143aa5b2b65fb2207b2",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: The tidyverse\nsubtitle: A swiss army knife for data management\norder: 0\n---\n\n\n\n\n\n# Installing the tidyverse {#installing-the-tidyverse}\n\nThe [tidyverse](https://www.tidyverse.org) is collection of R packages that makes it much easier to import, manage and visualize data.\nTo use the tidyverse, you only need to open the `tidyverse` package, and it will automatically open all of the tidyverse R packages.\n\nLike any normal package, you need to first install it once:\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages('tidyverse')\n```\n:::\n\n\n\n\n\nThen in every script that you use the package, you open it with `library`:\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n:::\n\n\n\n\n\nWhen you first run this code, it will print a message that shows you all the packages that it opened for you. Some of the most important ones that we'll we using are:\n\n* [tibble](https://tibble.tidyverse.org/). An optimized way for structuring *rectangular data* (basically: a spreadsheet of rows and columns)\n* [dplyr](https://dplyr.tidyverse.org/). Functions for manipulating tibbles: select and rename columns, filter rows, mutate values, etc.\n* [readr](https://readr.tidyverse.org/). Read data into R. \n* [ggplot2](https://ggplot2.tidyverse.org/). One of the best visualization tools out there. Check out the [gallery](https://r-graph-gallery.com/)\n\n\n::: {.callout-warning title=\"What about the 'Conflicts'?\" collapse=\"true\"}\nWhen opening the tidyverse, and when opening packages in general, you can get a `Conflicts` warning. \nA very common warning for the tidyverse is:\n\n```\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n```\n\nSo what does this mean, and should we be worried?\n\nSince anyone can write new packages for R, it can happen that two packages provide functions with the same name.\nIn this example, we see that the `filter` function exists in both the `dplyr` package (which we opened by opening the tidyverse), and in the `stats` package (which is included in base R).\nSo now R needs to decide which version of the function to use when you type `filter()`.\nIn this case, it says that the `dplyr::filter()` **masks** `stats::filter()`, meaning that it will now use the `dplyr` version.\n\nIn practice, this will rarely be a problem, because you seldom need two versions of a function in the same script.\nBut if you ever do, there is a simple solution. Instead of just using `filter()`, you can type `dplyr::filter()` to specifically use this version.\nIn the following code, we use this notation to specifically open the help page for `dplyr::filter` and `stats::filter`.\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n?dplyr::filter()\n?stats::filter()\n```\n:::\n\n\n\n\n\n:::\n\n::: {.callout-note title=\"The tidyverse versus base R\" collapse=\"true\"}\nMany of the things that the tidyverse allows you to do are also possible in *base R* (i.e. the basic installation of R).\nBase R also provides functions for importing, managing and visualizing data.\nSo why do we need the tidyverse?\n\nThe tidyverse is an *opinionated* framework, which means that it doesn't just *enable* you to do things, but also suggests how you *should* do things.\nThe authors have thought long and hard about how to make data management easy, effective and intuitive (they have even [written papers](https://www.jstatsoft.org/article/view/v059i10) about it).\nThis not only makes the tidyverse much easier and intuitive to learn, but also makes sure everyone writes their code in the same way, which improves transparency and shareability.\n\nThis is different from base R, which is designed to be a highly flexible programming language, that allows you to do almost anything.\nAccordingly, it is still worthwhile to learn base R at some point if you want to specialize more in computational research methods.\nBut for our Communication Science program, and for many data science applications in general, you can do all your data management in the tidyverse.\n:::\n\n\n# Data management with the tidyverse {#data-management-with-the-tidyverse}\n\nThe tidyverse is built around the concept of *tidy data* [@wickham14].\nThe main principles of tidy data are:\n\n1. Each variable must have its own column.\n2. Each observation must have its own row.\n3. Each value must have its own cell.\n\nThis type of data is also called a data frame, or a spreadsheet.\nWhat the tidyverse does is provide a set of tools that make it easy to work with this type of data.\nAt the core of this is the `tibble` data structure.\nAs a simple example, the following code creates a tibble containing respondents, their gender, and their height.\nWe'll call our tibble **d** (short for data).\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd <- tibble(resp_id = c(  1,   2,   3,   4), \n            gender  = c(\"M\", \"M\", \"F\", \"F\"), \n            height  = c(176, 165, 172, 160))\n```\n:::\n\n\n\n\n\nThe name `d` is now a tibble with 4 rows and 3 columns.\nLike any name in R, we can print it to see what it looks like:\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 4 × 3\n  resp_id gender height\n    <dbl> <chr>   <dbl>\n1       1 M         176\n2       2 M         165\n3       3 F         172\n4       4 F         160\n```\n\n\n:::\n:::\n\n\n\n\n\nThe vast majority of data that we work with in the social sciences can be structured in this way.\nThe rows typically represent our units of analysis (e.g., respondents, participants, texts, etc.), and the columns represent the variables that we measure on these units.\nThis makes it imperative for us to learn how we can manage this type of data effectively.\nWe need to be able to `select` columns, `filter` rows, `mutate` values, and `summarize` data.\nSometimes we also need to `pivot` the data, or `join` it with other data.\nIn this chapter you will learn how to do all of this with the tidyverse.",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}