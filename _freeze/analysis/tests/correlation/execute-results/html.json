{
  "hash": "a98bd02cf6037a1f8cea8768d168ad4d",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: Correlation test\nsubtitle: Testing the relationship between numeric variables\n---\n\n\n\n# What is the correlation test?\n\nIn communication science we are often interested in the relationship between numeric variables.\nFor example, we might want to know if there is a relationship between the amount of time people spend on social media and their feelings of loneliness.\n\nThe correlation test is a statistical test that can tell us if there is a relationship between two numeric variables.\nIt also provides a coefficient between -1 and 1 that tells us how strong the relationship is, and whether it is positive or negative.\nIn this tutorial we focus on conducting the test. For more details on the concept of correlation and how to interpret the correlation coefficient $r$, see the [covariance and correlation](../concepts/covariance-and-correlation.qmd) section.\n\nWhat the correlation test **does not** tell us is whether there is a causal relationship between the variables.\nFor example, if we find that there is a correlation between social media use and loneliness, it does not mean that social media use causes loneliness.\nFor more detail on this, see the [causality](../concepts/causality.qmd) section.\n\n# Conducting the correlation test\n\nWe'll show two ways of conducting the correlation test: using the `cor.test` function and using the `tab_corr` function from the `sjPlot` package.\nThe `cor.test` function is part of the base R package, and is usefull if you just have two variables.\nThe `tab_corr` function is part of the `sjPlot` package, and is useful if you have multiple variables and want to see the correlations between all of them.\n\nTo demonstrate the correlation test, we'll use the practice data that we've used before.\nHere we load the data, and immediately rename the `news consumption` variable to `news_consumption` to avoid spaces in the column name.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nd <- read_csv(\"https://tinyurl.com/R-practice-data\") |>\n        rename(news_consumption = `news consumption`)\n```\n:::\n\n\n\n## Between two variables: cor.test\n\nIn the practice data we have variables for the `news_consumption` of the participants, and their `trust_t1` in the news media (measured before the experiment).\nThese are both numeric variables, so we can use the correlation test to see if there is a relationship between them. \n\nTo perform the correlation test using the `cor.test` function, we pass the two variables to the function.\nRecall that we can use the `$` symbol to access variables in a data frame.\nSo here we access the `news_consumption` and `trust_t1` variables from the `d` data frame.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncor.test(d$news_consumption, d$trust_t1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tPearson's product-moment correlation\n\ndata:  d$news_consumption and d$trust_t1\nt = 2.6273, df = 598, p-value = 0.008827\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n 0.02700997 0.18528348\nsample estimates:\n      cor \n0.1068234 \n```\n\n\n:::\n:::\n\n\n\nThe output gives us the correlation coefficient under the `sample estimates`, which in our case is $r = 0.107$.\nThis means that the correlation is positive (> 0), but quite weak.\nThe test also reports a p-value (`0.009`), which tells us that the correlation is significant at the $99\\%$ (`< 0.01`) confidence level. \nAlso note that the degrees of freedom are reported as `598`, which is the number of observations minus 2.\n\n::: {.callout-note title=\"cor.test using the formula notation\" collapse=\"true\"}\n\nIt is also possible to use the formula notation in the `cor.test` function.\nHowever, this looks a bit weird, because in the correlation tests there are no dependent variables, since we are **just looking at the relationship**.\nThe convention for formulas in R is to use the `~` symbol to separate the dependent and independent variables (`dependent ~ independent_1 + independent_2 + ...`).\nFor the correlation test, we would just omit the dependent variable.\nSo for the example above, the code would look like this:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncor.test(~ age + trust_t1, data = d)\n```\n:::\n\n\n:::\n\n## Between more variables: tab_corr\n\nIf we need to see the correlations between multiple variables, we can use the `tab_corr` function from the `sjPlot` package.\nFor example, let's look at the correlations between the 5 items used to calculate the `trust_t1` scale.\nTo use `tab_corr`, we can simply pass a data frame with the variables we want to use.\nHere we use the `select` function to select all columns from `trust_t1_item1` to `trust_t1_item5`.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(sjPlot)\nd |>\n    select(trust_t1_item1:trust_t1_item5) |>\n    tab_corr()\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table style=\"border-collapse:collapse; border:none;\">\n<tr>\n<th style=\"font-style:italic; font-weight:normal; border-top:double black; border-bottom:1px solid black; padding:0.2cm;\">&nbsp;</th>\n<th style=\"font-style:italic; font-weight:normal; border-top:double black; border-bottom:1px solid black; padding:0.2cm;\">trust_t1_item1</th>\n<th style=\"font-style:italic; font-weight:normal; border-top:double black; border-bottom:1px solid black; padding:0.2cm;\">trust_t1_item2</th>\n<th style=\"font-style:italic; font-weight:normal; border-top:double black; border-bottom:1px solid black; padding:0.2cm;\">trust_t1_item3</th>\n<th style=\"font-style:italic; font-weight:normal; border-top:double black; border-bottom:1px solid black; padding:0.2cm;\">trust_t1_item4</th>\n<th style=\"font-style:italic; font-weight:normal; border-top:double black; border-bottom:1px solid black; padding:0.2cm;\">trust_t1_item5</th>\n</tr>\n<tr>\n<td style=\"font-style:italic;\">trust_t1_item1</td>\n<td style=\"padding:0.2cm; text-align:center;\">&nbsp;</td>\n<td style=\"padding:0.2cm; text-align:center;\">0.268<span style=\"vertical-align:super;font-size:0.8em;\">***</span></td>\n<td style=\"padding:0.2cm; text-align:center;\">-0.730<span style=\"vertical-align:super;font-size:0.8em;\">***</span></td>\n<td style=\"padding:0.2cm; text-align:center;\">0.724<span style=\"vertical-align:super;font-size:0.8em;\">***</span></td>\n<td style=\"padding:0.2cm; text-align:center;\">0.848<span style=\"vertical-align:super;font-size:0.8em;\">***</span></td>\n</tr>\n<tr>\n<td style=\"font-style:italic;\">trust_t1_item2</td>\n<td style=\"padding:0.2cm; text-align:center;\">0.268<span style=\"vertical-align:super;font-size:0.8em;\">***</span></td>\n<td style=\"padding:0.2cm; text-align:center;\">&nbsp;</td>\n<td style=\"padding:0.2cm; text-align:center;\">-0.273<span style=\"vertical-align:super;font-size:0.8em;\">***</span></td>\n<td style=\"padding:0.2cm; text-align:center;\">0.252<span style=\"vertical-align:super;font-size:0.8em;\">***</span></td>\n<td style=\"padding:0.2cm; text-align:center;\">0.289<span style=\"vertical-align:super;font-size:0.8em;\">***</span></td>\n</tr>\n<tr>\n<td style=\"font-style:italic;\">trust_t1_item3</td>\n<td style=\"padding:0.2cm; text-align:center;\">-0.730<span style=\"vertical-align:super;font-size:0.8em;\">***</span></td>\n<td style=\"padding:0.2cm; text-align:center;\">-0.273<span style=\"vertical-align:super;font-size:0.8em;\">***</span></td>\n<td style=\"padding:0.2cm; text-align:center;\">&nbsp;</td>\n<td style=\"padding:0.2cm; text-align:center;\">-0.673<span style=\"vertical-align:super;font-size:0.8em;\">***</span></td>\n<td style=\"padding:0.2cm; text-align:center;\">-0.764<span style=\"vertical-align:super;font-size:0.8em;\">***</span></td>\n</tr>\n<tr>\n<td style=\"font-style:italic;\">trust_t1_item4</td>\n<td style=\"padding:0.2cm; text-align:center;\">0.724<span style=\"vertical-align:super;font-size:0.8em;\">***</span></td>\n<td style=\"padding:0.2cm; text-align:center;\">0.252<span style=\"vertical-align:super;font-size:0.8em;\">***</span></td>\n<td style=\"padding:0.2cm; text-align:center;\">-0.673<span style=\"vertical-align:super;font-size:0.8em;\">***</span></td>\n<td style=\"padding:0.2cm; text-align:center;\">&nbsp;</td>\n<td style=\"padding:0.2cm; text-align:center;\">0.753<span style=\"vertical-align:super;font-size:0.8em;\">***</span></td>\n</tr>\n<tr>\n<td style=\"font-style:italic;\">trust_t1_item5</td>\n<td style=\"padding:0.2cm; text-align:center;\">0.848<span style=\"vertical-align:super;font-size:0.8em;\">***</span></td>\n<td style=\"padding:0.2cm; text-align:center;\">0.289<span style=\"vertical-align:super;font-size:0.8em;\">***</span></td>\n<td style=\"padding:0.2cm; text-align:center;\">-0.764<span style=\"vertical-align:super;font-size:0.8em;\">***</span></td>\n<td style=\"padding:0.2cm; text-align:center;\">0.753<span style=\"vertical-align:super;font-size:0.8em;\">***</span></td>\n<td style=\"padding:0.2cm; text-align:center;\">&nbsp;</td>\n</tr>\n<tr>\n<td colspan=\"6\" style=\"border-bottom:double black; border-top:1px solid black; font-style:italic; font-size:0.9em; text-align:right;\">Computed correlation used pearson-method with listwise-deletion.</td>\n</tr>\n \n</table>\n`````\n:::\n:::\n\n\n\nThis is great for getting a quick overview of the relationships between multiple variables.\nIf you need to get the exact p-values, you can also use `tab_corr(p.numeric = TRUE)`.\n\n\n## Reporting the correlation test\n\nFor APA style reporting of the correlation test you need to know the `correlation coefficient`, `p-value`, and the `degrees of freedom`. \nThe formula for reporting the results of a correlation test in APA style is:\n\n> r(`df`) = `correlation coefficient`, p = `p-value`.\n\nIn our example above we observed a correlation coefficient of $r = 0.107$ with a p-value of $p = 0.009$, and $598$ degrees of freedom. \nSo we would report this as:\n\n> There is a positive correlation between age and trust in the news media $r(598) = 0.107$, $p < 0.01$.\n\n\n# Alternative correlation tests\n\nBy default the `cor.test` function uses the Pearson correlation coefficient.\nThis is the most common correlation coefficient, but there are also other types of correlation coefficients that you might want to use depending on your data.\n\nThe Pearson correlation coefficient assumes that the relationship between the variables is linear, and that the variables are normally distributed.\nIf this is not the case, you might want to use instead use Spearman's $\\rho$ or Kendall's $\\tau$.\n\nUsing these alternative methods is easy in R.\nYou just need to specify the `method` argument in the `cor.test` function.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncor.test(d$news_consumption, d$trust_t1, method = \"spearman\")\ncor.test(d$news_consumption, d$trust_t1, method = \"kendall\")\n```\n:::\n",
    "supporting": [
      "correlation_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}