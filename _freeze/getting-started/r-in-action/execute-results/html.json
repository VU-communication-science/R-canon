{
  "hash": "f01ed6b11a2f7913fb006f3b47447a7e",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: R in Action (demo)\norder: 2\n---\n\n\n\n\nR is a very powerful tool, but it takes some time to learn how to use it before you get to fully appreciate what you can use it for.\nOn this page we show you a **quick example of some of the things you will learn here**.\n\nAll the code that you see here will be explained in the rest of this online book. \n**For now, don't worry about understanding the code**, and focus on thinking how the techniques we'll be using fit into your tool belt as a communication scientist.\n\n## Loading the packages we'll use\n\nOne of the things that makes R so versatile, is that anyone can extend it by writing new *packages*. \nYou can think of packages kind of like apps in an app-store. \nFor this demo, we'll need two packages, that you'll first need to install.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages('tidyverse')\ninstall.packages('sjPlot')\n```\n:::\n\n\n\n\nYou only need to install packages once, just like apps on you mobile phone.\nOnce downloaded, they are stored in your R *library*.\nWhen you then use the packages in an R script, you just *open* them like this:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(sjPlot)\n```\n:::\n\n\n\n\n## Import data\n\nThe first step for any analysis is to import your data. \nUsing the `read_csv` function from the `tidyverse` package, we can directly download this information from the internet and import it into R.\n\n\n\n\n# TO DO\n\nWe'll show a nice example here of how tidyverse allows us to import and clean a data set nice and quick, how we can visualize it, perform a statistical test, and create an APA ready table and visualizations",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}