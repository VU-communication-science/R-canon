{
  "hash": "67852279f8b1547fadb339836fa10621",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: Packages\norder: 5\n---\n\n\n\n\n# What is a package? {#what-is-a-package}\n\n\nIn R, a package is a collection of functions, data, and documentation that extends the capabilities of R. \nYou can think of packages kind of like apps on your phone: they provide additional functionality that you can use to perform specific tasks.\nAlso, like apps, you can install and uninstall packages as needed, directly from within R.\n\nThere are thousands of R packages available, which enables you to use almost any existing data analysis technique.\nR is not just a tool for statistical analysis, but also for data visualization, data collection, articifial intelligence, and much more.\nIf there is anything you need to do, there is a good chance that someone has already written a package for it.\n\n# How to install and use a package\n\nTo use a package, you first need to install it. **Installing a package only needs to be done once** per system (unless you need to update it).\n\n## 1. Install a package\n\nMost packages are available on the Comprehensive R Archive Network (CRAN), which is the main repository for R packages.\nTo install these packages, all you need to know is their name.\n\nFor example, there is a package called `lubridate` that makes it easier to work with dates and times in your data.\nTo install this package, you can use the `install.packages()` function:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(\"lubridate\")\n```\n:::\n\n\n\n\n::: {.callout-warning title=\"What if R asks tot 'install from source'?\" collapse=\"true\"}\n\nWhen running `install.packages()` You sometimes get the message that `There is a binary version available but the source version is later` (we're mainly seen this on Mac). You then get the question whether you want to `install from source` the package which needs compilation `(Yes/no)`. \nTo answer this question, you have to type \"yes\" or \"no\" in your R console. \n\nIt is then usually **best to say NO**. \nThis will install a slightly older version of the package, but it will be much faster and easier to install.\nYou often don't need the latest version, so it's not worth the extra hassle.\n\nIn case you're curious, the reason for this is that the newest version has not been *prepared* for your system yet.\nThey do have the **source code**, but it has not yet been compiled into a **binary** version that is ready to use.\nThink of the source code as a recipe, and the binary version as the ready-made dish.\nIf you really want to have the newest version you can say \"yes\", but you'll have to cook it yourself! \nThe main problem is that you will often need to install some extra software to do this, which can be a hassle.\nSo unless you really need the newest version, it's usually best to say \"no\", and just install the older version that has already been prepared for your system.\n:::\n\n## 2. Load a package\n\nOnce you have installed a package, it is not yet loaded into your current R session.\nSimilar to when you install a new app on your phone, you need to open it every time you want to use it.\n\nTo use a package in your current R session, you can load it with the `library()` function:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(lubridate)\n```\n:::\n\n\n\n\n# How do I know how to use a package?\n\nMost packages come with good documentation that explains how to use the functions in the package.\nFor individual functions you can use the `?` operator to open the help page for that function, as we explain in [here](../good-to-know/function-documentation.qmd).\nBut there is often also a more general documentation that explains the package as a whole.\nThis is called a **vignette**, and if a package has one, you can open it with the `vignette()` function.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvignette(\"lubridate\")\n```\n:::\n\n\n\n\nYou can look up vignettes and function documentation [online](https://www.rdocumentation.org/). \nThis is also a good way to find new packages for whatever you're trying to do.\n\n",
    "supporting": [
      "packages_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}