---
title: Correlation test
subtitle: Testing the relationship between numeric variables
---

# What is the correlation test?

In communication science we are often interested in the relationship between numeric variables.
For example, we might want to know if there is a relationship between the amount of time people spend on social media and their feelings of loneliness.

The correlation test is a statistical test that can tell us if there is a relationship between two numeric variables.
It also provides a coefficient between -1 and 1 that tells us how strong the relationship is, and whether it is positive or negative.
In this tutorial we focus on conducting the test. For more details on the concept of correlation and how to interpret the correlation coefficient $r$, see the [covariance and correlation](../concepts/covariance-and-correlation.qmd) section.

What the correlation test **does not** tell us is whether there is a causal relationship between the variables.
For example, if we find that there is a correlation between social media use and loneliness, it does not mean that social media use causes loneliness.
For more detail on this, see the [causality](../concepts/causality.qmd) section.

# How to use it

We'll show two ways of conducting the correlation test: using the `cor.test` function and using the `tab_corr` function from the `sjPlot` package.
The `cor.test` function is part of the base R package, and is usefull if you just have two variables.
The `tab_corr` function is part of the `sjPlot` package, and is useful if you have multiple variables and want to see the correlations between all of them.

To demonstrate the correlation test, we'll use the practice data that we've used before.
```{r, message=F}
library(tidyverse)
d <- read_csv("https://tinyurl.com/R-practice-data") |>
        rename(news_consumption = `news consumption`)
```

## Between two variables: cor.test

In the practice data we have variables for the `news_consumption` of the participants, and their `trust_t1` in the news media (measured before the experiment).
These are both numeric variables, so we can use the correlation test to see if there is a relationship between them. 

To perform the correlation test using the `cor.test` function, we pass the two variables to the function.
Recall that we can use the `$` symbol to access variables in a data frame.
So here we access the `news_consumption` and `trust_t1` variables from the `d` data frame.

```{r}
cor.test(d$news_consumption, d$trust_t1)
```

The output gives us the correlation coefficient under the `sample estimates`, which in our case is $r = 0.107$.
This means that the correlation is positive (> 0), but quite weak.
The test also reports a p-value (`0.009`), which tells us that the correlation is significant at the $99\%$ (`< 0.01`) confidence level. 
Also note that the degrees of freedom are reported as `598`, which is the number of observations minus 2.

::: {.callout-note title="cor.test using the formula notation" collapse="true"}

It is also possible to use the formula notation in the `cor.test` function.
However, this looks a bit weird, because in the correlation tests there are no dependent variables, since we are **just looking at the relationship**.
The convention for formulas in R is to use the `~` symbol to separate the dependent and independent variables (`dependent ~ independent_1 + independent_2 + ...`).
For the correlation test, we would just omit the dependent variable.
So for the example above, the code would look like this:

```{r, results='hide'}
cor.test(~ news_consumption + trust_t1, data = d)
```
:::

## Between more variables: tab_corr

If we need to see the correlations between multiple variables, we can use the `tab_corr` function from the `sjPlot` package.
For example, let's look at the correlations between the 5 items used to calculate the `trust_t1` scale.
To use `tab_corr`, we can simply pass a data frame with the variables we want to use.
Here we use the `select` function to select all columns from `trust_t1_item1` to `trust_t1_item5`.

```{r, message=F}
library(sjPlot)
d |>
    select(trust_t1_item1:trust_t1_item5) |>
    tab_corr()
```

This is great for getting a quick overview of the relationships between multiple variables.
If you need to get the exact p-values, you can also use `tab_corr(p.numeric = TRUE)`.


## Pearson, Spearman, and Kendall

By default the `cor.test` function uses the Pearson correlation coefficient.
This assumes that the relationship between the variables is linear, and that the variables are (roughly) normally distributed.
If this is not the case, you might want to instead use Spearman's $\rho$ or Kendall's $\tau$.

To use these alternative methods, you just need to specify the `method` argument in the `cor.test` function, or the `corr.method` argument in the `tab_corr` function.

```{r, results='hide', warning=F, message=F}
cor.test(d$news_consumption, d$trust_t1, method = "spearman")
cor.test(d$news_consumption, d$trust_t1, method = "kendall")

d |> select(trust_t1_item1:trust_t1_item5) |> tab_corr(corr.method="spearman")
d |> select(trust_t1_item1:trust_t1_item5) |> tab_corr(corr.method="kendall")
```



# How to report it

For APA style reporting of the correlation test you need to know the `correlation coefficient`, `p-value`, and the `degrees of freedom`. 
You can find all these values in the output of the `cor.test` function.[^1] 

[^1]: When using `tab_corr`, you can use the `p.numeric = TRUE` argument to get the p-values.
The degrees of freedom is always the number of observations minus 2, but be carefull not to count missing (NA) values.  

The formula for reporting the results of a correlation test in APA style is:

r(`degrees of freedom`) = `correlation coefficient`, p = `p-value`.

* the `correlation coefficient` is rounded to two decimal places, and the number before the decimal point is ommited if zero (`.11` instead of `0.11`).
* The `p-value` is reported for the smallest significant level (`p < 0.05`, `p < 0.01` or `p < 0.001`), or in full with three decimal places if not significant (`p = 0.123`).



In our example above we observed a correlation coefficient of $r = 0.107$ with a p-value of $p = 0.009$, and $598$ degrees of freedom. 
So we would report this as:

> There is a positive correlation between age and trust in journalists, $r(598) = .12$, $p < 0.01$.


